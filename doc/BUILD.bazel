load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@bazel_skylib//rules:diff_test.bzl", "diff_test")
load("@io_bazel_stardoc//stardoc:stardoc.bzl", "stardoc")

# Workaround https://github.com/bazelbuild/stardoc/issues/25
write_file(
    name = "gen_header",
    out = "header.vm",
    content = [
        "<!-- Generated with Stardoc, Do Not Edit! -->",
        "",
        "${moduleDocstring}",
    ],
)

_DOC_SRCS = [
    "apple",
    "dtrace",
    "resources",
    "versioning",
    "watchos.doc",
]

[
    stardoc(
        name = file + "_doc",
        out = file + ".md",
        header_template = ":header.vm",
        input = "//apple:%s.bzl" % file,
        deps = ["//apple:" + file],
    )
    for file in _DOC_SRCS
]

# If this test fails, run
# bazel run //doc:update
[
    diff_test(
        name = "check_" + file,
        file1 = file + ".md",
        file2 = "rules-%s.md" % file.replace(".doc", ""),
    )
    for file in _DOC_SRCS
]

write_file(
    name = "gen_update",
    out = "update.sh",
    content = [
        "#!/usr/bin/env bash",
        "cd $BUILD_WORKSPACE_DIRECTORY",
    ] + [
        "cp -fv bazel-bin/doc/{src}.md doc/rules-{dst}.md".format(
            src = file,
            dst = file.replace(".doc", ""),
        )
        for file in _DOC_SRCS
    ],
)

sh_binary(
    name = "update",
    srcs = ["update.sh"],
    data = [file + ".md" for file in _DOC_SRCS],
)
